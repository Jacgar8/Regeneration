buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        maven { url = "https://plugins.gradle.org/m2/"}
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
        classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.4.0"
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: "com.matthewprenger.cursegradle"


version = '2.0.0'
group = 'me.suff.mc.regen' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = '[1.16] Regeneration'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'official', version: '1.16.5'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')
            arg "-mixin.config=regen.mixins.json"
            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            ideaModule "${project.name}.main"

            mods {
                regen {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                regen {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'regen', '--all', '--output', file('src/generated/resources/')

            mods {
                regen {
                    source sourceSets.main
                }
            }
        }
    }
}

curseforge {
    if(project.hasProperty('curseforge') && project.hasProperty('regen')) {

        apiKey = rootProject.curseforge
        project {
            id = rootProject.regen

            changelog = 'Regen 2.0.0 </br>' +
                    '- Fixed 1.16.5 not booting up  </br>' +
                    '- Gave Timelords voices  </br>' +
                    '- Added Timelord Spawn Items </br>' +
                    '- Added Female Council Robes </br>' +
                    '- Added Male Council Robes </br>' +
                    '- Added Timelord Guard Armor </br>' +
                    '- Added Zinc Ore </br>' +
                    '- Added Zinc Ingot </br>' +
                    '- Added Rifle </br>' +
                    '- Added Staser </br>' +
                    '- Added Bio-Container </br>' +
                    '- Renamed "Fob Watch" to "Chameleon Arch" </br>' +
                    '- Made Timelords choose from their own skin folder instead of recycling the players ones </br>' +
                    '- Fixed bug where timelord heads would render slightly dark </br>' +
                    '- Changed Timelord models  </br>' +
                    '- Added Config for mob regenerations </br>' +
                    '- Fixed Mending Exploit  </br>' +
                    '- Changed Timelord Trades slightly  </br>' +
                    '- Heart Icons now become double hearts when you have Regenerations </br>' +
                    '- Fixed Search bar over scaling outside of the GUI </br>' +
                    '- Added back Zero Room Roundels </br>' +
                    '- Fob Watches now generate in some chests (Can be disabled in config): </br>' +
                    '* ABANDONED_MINESHAFT 15% chance </br>' +
                    '* BASTION_BRIDGE 15% chance </br>' +
                    '* LIBRARIAN_GIFT 15% chance </br>' +
                    '* WOODLAND_MANSION 15% chance </br>' +
                    '* STRONGHOLD_LIBRARY 15% chance </br>' +
                    '* SHIPWRECK_SUPPLY 15% chance </br>' +
                    '* ALL TREASURE LOOT TABLES 40% chance </br>'
            releaseType = 'release'
            changelogType = 'html'
            addGameVersion '1.16.3'
            addGameVersion '1.16.4'
            addGameVersion '1.16.5'
            mainArtifact(jar) {
                displayName = "[1.16.x] Regeneration -  $project.version"
            }
        }
    }
}

repositories{
    maven {
        // location of the maven that hosts JEI files
        url "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        // location of the maven that hosts IE files
        url "https://maven.blamejared.com/"
    }
    maven {
        url "https://www.cursemaven.com"
    }
    mavenCentral()
}


dependencies {
    minecraft "net.minecraftforge:forge:${forge_version}"
    compileOnly 'org.jetbrains:annotations:15.0'
    compileOnly fg.deobf("mezz.jei:jei-${jei_version}:api")
    runtimeOnly fg.deobf("mezz.jei:jei-${jei_version}")
    implementation fg.deobf("curse.maven:configured-457570:3243552")

}

mixin {
    add sourceSets.main, "regen.refmap.json"
}
jar {
    manifest {
        attributes([
                "Specification-Title"     : "regen",
                "Specification-Vendor"    : "suff99",
                "Specification-Version"   : "${version}", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "suff99",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs": "regen.mixins.json"
        ])
    }
}

def getDate() {
    return new Date().format('dd-MM-yyyy')
}

// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar')
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}